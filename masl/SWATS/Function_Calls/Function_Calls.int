//! Tests Domain, object and instance based functions.
domain Function_Calls is
  //! This is unsupported at version 4.0.0.
  //! The type should be typed IH for Object_A
  public type Structure_For_IH is structure
    An_Instance_Handle : instance of Object_A;
  end structure;

  public type Colour_Type is enum (Green,
                                   Blue,
                                   Red);

  public type New_Enum_Type is enum (Sly,
                                     Sandy,
                                     Wes);

  public type Return_Enum_Type is enum (Slys_Mum,
                                        Sandys_Mum,
                                        Wes_Mum,
                                        Nobodys_Mum);

  //! This function is accessible for the whole domain.
  public service Domain_FunctionA (InputA  : in  integer,
                                   OutputA : out integer);

  public service Create_Report_Data ();

  public service Delete_Report_Data ();

  public service Perform_Service_In_Tight_Loop (A_Tight_Input_Parameter  : in  instance of A_Tight_Object,
                                                This_Test_Number         : in  integer,
                                                Testing_For_What         : in  string,
                                                A_Tight_Return_Parameter : out integer);

  public service Test_Set_Of_IH (Set_Of_IH        : in  sequence of Structure_For_IH,
                                 Single           : in  boolean,
                                 Testing_For_What : in  string);

  public service Receive_Enumeration (Test_Number : in  integer,
                                      The_Colour  : in  Colour_Type,
                                      Testing_For : in  string);

  public service Nav_Enum_Over_Bridge (The_Input_Value  : in  New_Enum_Type,
                                       The_Return_Value : out Return_Enum_Type);

  public service Call_To_Self (The_Input_Value  : in  integer,
                               The_Output_Value : out integer);

  public service Add_Values_From_Bridge (Test   : in  integer,
                                         Input1 : in  integer,
                                         Input2 : in  integer,
                                         Input3 : in  integer);

  public service Call_A (Input_Value  : in  integer,
                         Output_Value : out integer);

  public service Call_B (Input_Value  : in  integer,
                         Output_Value : out integer);

  public service Test_IH_Params (Input_IH  : in  instance of Object_C,
                                 Return_IH : out instance of Object_C);

  terminator Report is
    public service Start_Test (Test_Number     : in  integer,
                               Requid          : in  string,
                               Invoking_Domain : in  string,
                               Invoking_Object : in  string,
                               Purpose         : in  string);
    pragma terminator_operation_number(1);

    public service Test_Passed (Test_Object_Domain : in  string,
                                Test_Number        : in  integer,
                                Test_Value         : in  integer);
    pragma terminator_operation_number(2);

    public service Test_Failed (Failed_Domain_Object : in  string,
                                Failed_Test_Number   : in  integer,
                                Failed_Test_Value    : in  integer);
    pragma terminator_operation_number(3);

    public service Test_Unsupported (Unsupported_Test_Number : in  integer);
    pragma terminator_operation_number(4);

    public service Test_Text (Test_Number : in  integer,
                              Free_Text   : in  string);
    pragma terminator_operation_number(5);

    public service Domain_Test_Start (This_Domain_Name : in  string);
    pragma terminator_operation_number(6);

    public service Domain_Test_Finished (This_Domain_Name : in  string);
    pragma terminator_operation_number(7);

    public service Specify_Requid (Requid_Test_Number : in  integer,
                                   The_Requid_Itself  : in  string);
    pragma terminator_operation_number(8);

  end terminator;
  pragma key_letter ("RPT");


  terminator Nav_To_Bridge is
    public service Big_Bridge_Navigation (Test : in  integer);
    pragma terminator_operation_number(1);

    public service Call_Domain_Sync_Service (Test        : in  integer,
                                             InputValue1 : in  integer,
                                             InputValue2 : in  integer,
                                             InputValue3 : in  integer);
    pragma terminator_operation_number(2);

    public service Call_Object_Sync_Service (Test        : in  integer,
                                             Text_Input  : in  string,
                                             The_Integer : in  integer,
                                             The_Real    : in  real);
    pragma terminator_operation_number(3);

  end terminator;
  pragma key_letter ("NTB");


  terminator Where_Are_We is
    public service What_Env (Env_Text : out string);
    pragma terminator_operation_number(1);

  end terminator;
  pragma key_letter ("WAW");


end domain;
pragma number (9);
pragma name ("Function_Calls");
pragma kl ("Function_Calls");
pragma version (15);
